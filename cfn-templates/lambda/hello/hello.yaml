AWSTemplateFormatVersion: 2010-09-09

Parameters:
  S3BucketCode:
    Type: String
    Description: The bucket where the zip code is
    Default: online-gallery-deploymentbucket-by6ml2kvad2b
  S3BucketCodePath:
    Type: String
    Description: The s3 bucket Path where the zip code is
    Default: cfn-templates/lambda/hello/hello.zip

Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: "sts:AssumeRole"

  LambdaPolicyLog:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: !Sub "${AWS::StackName}-lambda-log"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: LogGroup
            Effect: Allow
            Action: "logs:CreateLogGroup"
            Resource: "arn:aws:logs:${region}:${account}:*"
          - Sid: LogEvents
            Effect: Allow
            Action:
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource: !Sub
              - >-
                arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:*
              - region: !Ref "AWS::Region"
                account: !Ref "AWS::AccountId"
                lambda: !Ref Lambda
      Roles:
        - Ref: "LambdaRole"

  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: nodejs12.x
      Role: !GetAtt LambdaRole.Arn
      Handler: index.handler
      Code:
        S3Bucket: !Ref S3BucketCode
        S3Key: !Ref S3BucketCodePath
      Description: Invoke a function during stack creation.
      TracingConfig:
        Mode: Active

Outputs:
  LambdaArn:
    Value: !GetAtt Lambda.Arn
  LambdaId:
    Value: !Ref Lambda
